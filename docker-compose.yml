version: '2'
services:

  rabbitmq:
    image: marcelmaatkamp/rabbitmq-mqtt-ldap
    restart: always
    hostname: rabbitmq
    environment:
      RABBITMQ_NODENAME: rabbitmq@rabbitmq
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia
      - ./etc/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.config
      - nodepki-certs-rabbitmq:/certs/rabbitmq
    logging:
      options:
        max-size: 50m
        
  neo4j:
    image: neo4j
    restart: always
    volumes:
     - neo4j-data:/data
     - neo4j-logs:/logs
    logging:
      options:
        max-size: 50m
        
  steemit-amqp:
    restart: always
    image: marcelmaatkamp/steemit-amqp
    environment:
     - RABBITMQ_HOSTNAME=rabbitmq
     - RABBITMQ_EXCHANGE=steemit.api
    volumes:
     - ./credentials.py:/app/mycredentials.py
    logging:
      options:
        max-size: 50m
      
  steemit-amqp-neo4j:
    image: marcelmaatkamp/steemit-data-analysis-platform:1.1
    environment:
     - logging.level.org=info

     - spring.rabbitmq.host=rabbitmq
     - spring.rabbitmq.port=5672
     - spring.rabbitmq.username=consumer-steemit-neo4j
     - spring.rabbitmq.password=consumer-steemit-neo4j

     - spring.data.neo4j.uri=bolt://neo4j
     - spring.data.neo4j.username=neo4j
     - spring.data.neo4j.password=spring-boot-neo4j
     - spring.data.neo4j.repositories.enabled=true

     - steemit.account.name=${steemit_account_name}
     - steemit.account.key.post=${steemit_account_key_post}
     - steemit.account.key.active=${steemit_account_key_active}
     
    logging:
      options:
        max-size: 50m
        
volumes:
 neo4j-data:
 neo4j-logs:
 rabbitmq:
